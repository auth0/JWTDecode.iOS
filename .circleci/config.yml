version: 2.1

executors:
  job-environment:
    shell: /bin/bash --login -eo pipefail
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      HOMEBREW_LOGS: ~/homebrew-logs
      HOMEBREW_TEMP: ~/homebrew-temp
      HOMEBREW_NO_AUTO_UPDATE: 1
  job-environment-ios:
    shell: /bin/bash --login -eo pipefail
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      HOMEBREW_LOGS: ~/homebrew-logs
      HOMEBREW_TEMP: ~/homebrew-temp
      HOMEBREW_NO_AUTO_UPDATE: 1
      SCHEME: JWTDecode-iOS
      DEVICE: iPhone 11
      FASTLANE_EXPLICIT_OPEN_SIMULATOR: 2

commands:
  use-swift:
    parameters:
      version: 
        type: string
    steps: 
      - run: sed -i "" 's/SWIFT_VERSION = 5.0/SWIFT_VERSION = << parameters.version >>/g' "JWTDecode.xcodeproj/project.pbxproj"
  prepare:
    parameters:
      ruby:
        type: string
        default: "2.6.3"
    steps: 
      - run: |
          echo "ruby-<< parameters.ruby >>"" > ~/.ruby-version
          brew install swiftlint
          bundle install --without=development
          grep -lR "shouldUseLaunchSchemeArgsEnv" *.* --null | xargs -0 sed -i '' -e 's/shouldUseLaunchSchemeArgsEnv = "YES"/shouldUseLaunchSchemeArgsEnv = "YES" codeCoverageEnabled = "YES"/g'
  test-ios:
    steps: 
      - run: |
          bundle exec fastlane ios bootstrap
          bundle exec fastlane ios ci
  build-package-ios:
    steps:
      - run: |
          bundle exec fastlane ios pod_lint
          carthage update --no-use-binaries && carthage build --no-skip-current
  test-macos:
    steps: 
      - run: |
          carthage bootstrap --platform mac
          security create-keychain -p circle cikeychain
          security list-keychains -d user -s "/Users/distiller/Library/Keychains/xcode.keychain-db" /Users/distiller/Library/Keychains/cikeychain-db
          security default-keychain -s /Users/distiller/Library/Keychains/cikeychain-db
          security unlock-keychain -p circle "/Users/distiller/Library/Keychains/cikeychain-db"
          xcodebuild test -scheme JWTDecode-OSX -destination 'platform=macOS,arch=x86_64' | xcpretty
          swift test
  test-tvos:
    steps: 
      - run: |
          carthage bootstrap --platform tvOS
          xcodebuild test -scheme JWTDecode-tvOS -destination 'platform=tvOS Simulator,name=Apple TV' | xcpretty

jobs:
  build-iOS-Swift-5_1:
    executor: job-environment-ios
    macos:
      xcode: 11.2.0
    steps:
      - checkout
      - prepare:
          ruby: "2.6.5"
      - test-ios
      - build-package-ios
      - run: bash <(curl -s https://codecov.io/bash) -J 'JWTDecode'
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
      - store_test_results:
          path: fastlane/test_output
  build-iOS-Swift-5_0:
    executor: job-environment-ios
    macos:
      xcode: 10.3.0
    steps:
      - checkout
      - prepare
      - test-ios
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
      - store_test_results:
          path: fastlane/test_output
  build-iOS-Swift-4_2:
    executor: job-environment-ios
    macos:
      xcode: 10.3.0
    steps:
      - checkout
      - use-swift: 
          version: "4.2"
      - prepare
      - test-ios
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
      - store_test_results:
          path: fastlane/test_output
  build-iOS-Swift-4_0:
    executor: job-environment-ios
    macos:
      xcode: 10.3.0
    steps:
      - checkout
      - use-swift: 
          version: "4.0"
      - prepare
      - test-ios
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
  build-macOS-Swift-5_1:
    executor: job-environment
    macos:
      xcode: 11.2.0
    steps:
      - checkout
      - prepare:
          ruby: "2.6.5"
      - test-macos
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
  build-macOS-Swift-4_2:
    executor: job-environment
    macos:
      xcode: 10.3.0
    steps:
      - checkout
      - use-swift: 
          version: "4.2"
      - prepare
      - test-macos
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
  build-tvOS-Swift-5_1:
    executor: job-environment
    macos:
      xcode: 11.2.0
    steps:
      - checkout
      - prepare
      - test-tvos
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build
  build-tvOS-Swift-4_2:
    executor: job-environment
    macos:
      xcode: 10.3.0
    steps:
      - checkout
      - use-swift: 
          version: "4.2"
      - prepare
      - test-tvos
      - save_cache:
          key: dependency-cache
          paths:
            - Carthage/Build

workflows:
  build:
    jobs:
      -  build-iOS-Swift-5_1
      -  build-iOS-Swift-5_0
      -  build-iOS-Swift-4_2
      -  build-iOS-Swift-4_0
      -  build-macOS-Swift-5_1
      -  build-macOS-Swift-4_2
      -  build-tvOS-Swift-5_1
      -  build-tvOS-Swift-4_2
